{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/newContact.js","components/Persons.js","components/Notification.js","components/Notification2.js","App.js","index.js"],"names":["Filter","setSearchWith","onChange","e","target","value","PersonForm","setNewName","setNewNumber","type","baseUrl","services","getAll","axios","get","create","newObject","post","deleteOne","id","delete","update","data","put","Persons","personsToShow","setToggle","toggle","setStatusMessage","map","person","name","number","onClick","window","confirm","newContact","setTimeout","Notification","message","className","Notification2","errorMessage","App","useState","persons","setPersons","newName","newNumber","searchWith","showAll","setShowAll","statusMessage","setErrorMessage","useEffect","then","response","filter","toUpperCase","includes","onSubmit","preventDefault","checkDuplicate","personObject","length","items","item","console","log","catch","error","concat","handleSubmit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2cdfbb87.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ setSearchWith }) => {\r\n    return (\r\n        <>\r\n          filter shown with <input onChange={(e) => setSearchWith(e.target.value)} />  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst PersonForm = ({ setNewName, setNewNumber }) => {\r\n    return (\r\n        <>\r\n            <div>\r\n                name: <input onChange={(e) => setNewName(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                number: <input onChange={(e) => setNewNumber(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst deleteOne = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (data, newObject) => {\r\n    return axios.put(`${baseUrl}/${data.id}`, newObject)\r\n}\r\n\r\nconst services = {\r\n    getAll,\r\n    create,\r\n    deleteOne,\r\n    update\r\n}\r\n\r\nexport default services","import React from 'react'\r\nimport newContact from '../services/newContact'\r\n\r\nconst Persons = ({ personsToShow, setToggle, toggle, setStatusMessage }) => {\r\n\r\n    const handleRemove = (id, name) => {\r\n        \r\n        let result = window.confirm(`Delete ${name}?`)\r\n\r\n        if (result) {\r\n            newContact\r\n                .deleteOne(id)\r\n            setTimeout(function(){ setToggle(!toggle); }, 100);\r\n            setStatusMessage(`Deleted ${name}`)        \r\n            setTimeout(() => {setStatusMessage(null)}, 5000)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {personsToShow.map(person =>\r\n            <p key={person.id}>{person.name} {person.number} <button onClick={() => handleRemove(person.id, person.name)}>delete</button></p>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n        }\r\n\r\n    return (\r\n    <div className=\"message\">\r\n        {message}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\n\r\nconst Notification2 = ({ errorMessage }) => {\r\n    if (errorMessage === null) {\r\n        return null\r\n      }\r\n    \r\n    return (\r\n    <div className=\"error\">\r\n        {errorMessage}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Notification2\r\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport newContact from './services/newContact'\nimport Notification from './components/Notification'\nimport Notification2 from './components/Notification2'\nimport './index.css'\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchWith, setSearchWith ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n  const [ toggle, setToggle ] = useState(true)\n  const [ statusMessage, setStatusMessage ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  \n  useEffect(() => {\n    newContact\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n    if (searchWith  !== '') {\n      setShowAll(false)\n    } else {\n      setShowAll(true)\n    }\n  }, [searchWith, toggle])\n\n  const personsToShow = showAll ? persons : persons.filter(person => person.name.toUpperCase().includes(searchWith.toUpperCase()))\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    let checkDuplicate = persons.filter((person) => person.name === newName)\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (checkDuplicate.length > 0) {\n\n      let result = window.confirm(`${personObject.name} is already added to phonebook, replace the old number with a new one?`)\n        if (result) {\n          newContact\n            .getAll()\n            .then(response => {\n              let items = response.data.filter(item => item.name === personObject.name)\n              console.log(items)\n              newContact\n                .update(items[0], personObject)\n                setTimeout(function(){ setToggle(!toggle); }, 100);\n              setStatusMessage(`Edited contact ${personObject.name}`)        \n              setTimeout(() => {setStatusMessage(null)}, 5000) \n            })\n            .catch(error => {\n              setErrorMessage(`Information of ${personObject.name} has already been removed from server`)        \n              setTimeout(() => {setErrorMessage(null)}, 5000)\n              return\n            })    \n        }\n      return\n    } else {\n      newContact\n        .create(personObject)\n        .then(response => {      \n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setStatusMessage(`Added ${personObject.name}`)        \n          setTimeout(() => {setStatusMessage(null)}, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(error.response.data.error)        \n          setTimeout(() => {setErrorMessage(null)}, 5000)\n          return\n        })\n    }\n  }\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n        <Notification message={statusMessage} />\n        <Notification2 errorMessage={errorMessage} />\n        <Filter setSearchWith={setSearchWith} />\n      <form onSubmit={(e) => handleSubmit(e)}>\n      <h2>add a new</h2>\n        <PersonForm setNewName={setNewName} setNewNumber={setNewNumber} />\n      </form>\n      <h2>Numbers</h2>\n        <Persons \n        personsToShow={personsToShow} \n        persons={persons} \n        setPersons={setPersons} \n        setToggle={setToggle} \n        toggle={toggle} \n        setStatusMessage={setStatusMessage}\n        />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}